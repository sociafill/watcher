image: golang:1.10

stages:
- test
- build
- docker

test:
  stage: test
  script:
  - go get -u github.com/golang/dep/cmd/dep
  - mkdir -p $GOPATH/src
  - cd $GOPATH/src
  - ln -s $CI_PROJECT_DIR
  - cd $CI_PROJECT_NAME
  - dep ensure
  - go test
  # Cache vendor directory prepared by dep in between jobs
  cache:
    key: ${CI_COMMIT_REF_SLUG}-vendor
    paths:
    - vendor/

build:
  stage: build
  script:
  - mkdir -p $GOPATH/src
  - cd $GOPATH/src
  - ln -s $CI_PROJECT_DIR
  - cd $CI_PROJECT_NAME
  - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o watcher .
  artifacts:
    paths:
      - watcher
      - Dockerfile
  cache:
    key: ${CI_COMMIT_REF_SLUG}-vendor

docker:image:
  variables:
    GIT_STRATEGY: none
  stage: docker
  image: docker:latest
  dependencies: 
  - build
  services:
  - docker:dind
  script:
  - docker version
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - docker build . -t $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}
  - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8} $CI_REGISTRY_IMAGE:latest
  - docker tag $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8} $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}
  - docker push $CI_REGISTRY_IMAGE:latest
  - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}