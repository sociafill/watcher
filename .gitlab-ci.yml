image: golang:1.10

stages:
- test
- build

test:
  stage: test
  script:
  - pwd
  - ls -la
  - go get -u github.com/golang/dep/cmd/dep
  - mkdir -p $GOPATH/src
  - cd $GOPATH/src
  - ln -s $CI_PROJECT_DIR
  - cd $CI_PROJECT_NAME
  - dep ensure
  - go test

build:
  stage: build
  script:
  - go get -u github.com/golang/dep/cmd/dep
  - mkdir -p $GOPATH/src
  - cd $GOPATH/src
  - ln -s $CI_PROJECT_DIR
  - cd $CI_PROJECT_NAME
  - dep ensure
  - pwd
  - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o watcher .
  - pwd
  - ls -la
  artifacts:
    paths:
      - watcher

# docker:image:
#   stage: docker
#   image: docker:latest
#   services:
#   - docker:dind
#   script:
#   - pwd
#   - ls -la
#   - docker version
#   - docker build -t $CI_REGISTRY_IMAGE:latest -f Dockerfile.scratch .
#   - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}
#   - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
#   - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}