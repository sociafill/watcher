image: golang:1.10

stages:
- test
- build
- docker

test:
  stage: test
  script:
  - chmod +x .gitlab/init.sh
  - .gitlab/init.sh
  - make test

build:
  stage: build
  script:
  - chmod +x .gitlab/init.sh
  - .gitlab/init.sh
  - make build

docker:image:
  stage: docker
  image: docker:latest
  services:
  - docker:dind
  script:
  - docker version
  - docker build -t $CI_REGISTRY_IMAGE:latest -f Dockerfile.scratch .
  - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - docker push $CI_REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}
  # Create docker images with tags if tag has been appeared
  - "[[ -z $CI_BUILD_TAG ]] && exit 0"
  - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:$CI_BUILD_TAG
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_TAG
